<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Nam&#39;s Journal</title>
    <link>https://namberino.github.io/tags/programming/</link>
    <description>Recent content in Programming on Nam&#39;s Journal</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 15 Jun 2025 21:12:49 +0700</lastBuildDate>
    <atom:link href="https://namberino.github.io/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My Solutions for LG Dream Code 2025</title>
      <link>https://namberino.github.io/posts/2025/06/my-solutions-for-lg-dream-code-2025/</link>
      <pubDate>Sun, 15 Jun 2025 21:12:49 +0700</pubDate>
      <guid>https://namberino.github.io/posts/2025/06/my-solutions-for-lg-dream-code-2025/</guid>
      <description>&lt;p&gt;Recently, LG Electronics has recently been holding this Dream Code competition for graduating or recently graduated students in Vietnam. They just held one this year on June 14th and I got the chance of participating in it. Unfortunately, I didn&amp;rsquo;t make it to top 50 (probably because I was an hour late to the competition). I did manage to complete all the challenges, though my solutions aren&amp;rsquo;t the most efficient. Here are my solutions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Let&#39;s make an HTTP server with Assembly</title>
      <link>https://namberino.github.io/posts/2025/01/lets-make-an-http-server-with-assembly/</link>
      <pubDate>Fri, 17 Jan 2025 22:37:58 +0700</pubDate>
      <guid>https://namberino.github.io/posts/2025/01/lets-make-an-http-server-with-assembly/</guid>
      <description>&lt;p&gt;One of the things that makes me happy is understanding how something works at its core. That&amp;rsquo;s basically the main reason why I built this HTTP web server entirely in x86 Assembly. Assembly is the lowest level you can go in a computer before you start working with machine code and building an HTTP server requires an understanding of networking.&lt;/p&gt;&#xA;&lt;p&gt;This project was really fun. It really put my Assembly, multi-processing, and syscall knowledge to the test and I hope you will learn something about Assembly, networking, and low level systems. Let&amp;rsquo;s start with some basics to set the stage.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How boot sectors work</title>
      <link>https://namberino.github.io/posts/2024/06/how-boot-sectors-work/</link>
      <pubDate>Thu, 20 Jun 2024 14:20:39 +0700</pubDate>
      <guid>https://namberino.github.io/posts/2024/06/how-boot-sectors-work/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s dive into the boot sector and how it works.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-bios&#34;&gt;The BIOS&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;em&gt;BIOS&lt;/em&gt; is a program that the computer uses to start the computer system after it is powered on. It is the program responsible for loading and setting up the hardware and system in a computer and loading up the operating system.&lt;/p&gt;&#xA;&lt;p&gt;We&amp;rsquo;re not going to be building a BIOS because that is way out of the scope of this project. What we are going to be building is another very important program that the BIOS uses when it loads up the operating system from memory: the &lt;em&gt;boot sector&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Modeling a Thrust Vector Control Rocket in Python</title>
      <link>https://namberino.github.io/posts/2024/06/modeling-a-thrust-vector-control-rocket-in-python/</link>
      <pubDate>Wed, 05 Jun 2024 20:31:39 +0700</pubDate>
      <guid>https://namberino.github.io/posts/2024/06/modeling-a-thrust-vector-control-rocket-in-python/</guid>
      <description>&lt;p&gt;Rocketry has always been a fascinating topic for me and I&amp;rsquo;d love to get into model rocketry because it seems so interesting. Unfortunately, due to where I live, I can&amp;rsquo;t really get into it due to lack of materials, cost, and local laws. So what&amp;rsquo;s a guy to do when he wants to get into rocketry but can&amp;rsquo;t physically do it? He goes the virtual simulation route.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ll be building a simulation for a simple thrust vector control (&lt;strong&gt;TVC&lt;/strong&gt;) rocket. This rocket will be modeled pretty accurately to life, it won&amp;rsquo;t be 100% realistic since it&amp;rsquo;s just a simulation, but it will be mostly correct. I&amp;rsquo;ll be documenting everything from start to finish so that anyone who wants to can follow along.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Decrypting a Serial-To-WiFi device&#39;s firmware</title>
      <link>https://namberino.github.io/posts/2024/04/decrypting-a-serial-to-wifi-devices-firmware/</link>
      <pubDate>Mon, 22 Apr 2024 14:40:02 +0700</pubDate>
      <guid>https://namberino.github.io/posts/2024/04/decrypting-a-serial-to-wifi-devices-firmware/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been doing some research into reverse engineering for a while now. I&amp;rsquo;ve also been learning about firmware and embedded systems for a long time. And I thought &amp;ldquo;Wouldn&amp;rsquo;t it be cool to combine these to skills to do something?&amp;rdquo;. So I decided to try decrypting the encrypted firmware of the a Serial-To-WiFi device. I&amp;rsquo;ve documented my process here in this blog post.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-device&#34;&gt;The device&lt;/h2&gt;&#xA;&lt;p&gt;I recently read that there was a vulnerability in the &lt;a href=&#34;https://www.moxa.com/en/products/industrial-edge-connectivity/serial-device-servers/wireless-device-servers/nport-w2150a-w2250a-series&#34;&gt;&lt;em&gt;Moxa NPort W2150A Serial-To-Wifi&lt;/em&gt;&lt;/a&gt; device that exploit stack-based buffer overflow. I decided I would take a shot at decrypting the firmware for this device, which was encrypted by default.&lt;/p&gt;</description>
    </item>
    <item>
      <title>8-bit Computer in FPGA</title>
      <link>https://namberino.github.io/posts/2024/02/8-bit-computer-in-fpga/</link>
      <pubDate>Mon, 26 Feb 2024 10:01:26 +0700</pubDate>
      <guid>https://namberino.github.io/posts/2024/02/8-bit-computer-in-fpga/</guid>
      <description>&lt;p&gt;Computers are mysterious. These machines have always been so enigmatic to most people. I can guarantee that if you ask someone on the road how computers work, they would most likely just answer &amp;ldquo;&lt;em&gt;I don&amp;rsquo;t know&lt;/em&gt;&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;I was like that for a long time, even after I started learning programming. So I decided that I will learn how a computer works by building one.&lt;/p&gt;&#xA;&lt;p&gt;At first, I was thinking about building a breadboard computer like &lt;a href=&#34;https://www.youtube.com/playlist?list=PLowKtXNTBypGqImE405J2565dvjafglHU&#34;&gt;Ben Eater&lt;/a&gt;. But then I realized that I don&amp;rsquo;t really have access to a lot of the components that Ben used where I live so I decided to make this computer using software, and since I just started learning &lt;strong&gt;Verilog&lt;/strong&gt;, I decided to put my &lt;strong&gt;Verilog&lt;/strong&gt; skill to the test by making this computer.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The world&#39;s most harmless ransomware</title>
      <link>https://namberino.github.io/posts/2024/02/the-worlds-most-harmless-ransomware/</link>
      <pubDate>Fri, 23 Feb 2024 17:37:37 +0700</pubDate>
      <guid>https://namberino.github.io/posts/2024/02/the-worlds-most-harmless-ransomware/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: Please do &lt;strong&gt;NOT&lt;/strong&gt; use this for malicious intent. This is purely for educational purpose only. If you do want to run this ransomware, run it in an isolated environment. &lt;strong&gt;STAY SAFE AND DON&amp;rsquo;T GET IN TROUBLE!&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Ever since I started watching &lt;em&gt;Mr. Robot&lt;/em&gt;, I got really interested in hacking and hackers. I&amp;rsquo;m not a hacker myself but I do like learning about how people have found ways to exploit computers.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
